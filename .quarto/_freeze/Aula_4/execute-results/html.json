{
  "hash": "203663fce7689e5960645f784acb4cff",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Aula 4\"\nformat: html\neditor: visual\nwarning: false\nmessage: false\n---\n\n\n# Pacotes\n\nOs pacotes necessários neste documento seguem abaixo. Dentre os pacotes carregados, há um que ainda não foi utilizado, o pacote **janitor**. O **janitor** é um pacote que possui funções destinadas a limpar base de dados, por exemplo, para nomes de colunas muito complexos, ele os transforma para um formato mais simplificado. Para entender mais sobre o pacote e suas funções clique [aqui](https://livro.curso-r.com/12-1-arrumando-banco-de-dados-o-pacote-janitor.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(ggthemes)\nlibrary(gsheet)\n```\n:::\n\n\n# Instalando pacotes de outros repositórios\n\nAs vezes é preciso carregar pacotes que não estão disponíveis no repósitório CRAN e utilizando a função \"`install.packages()`\" não será possível instalá-los. Para resolver isso, pode-se fazer uso de outro instalador como se segue:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages('pak') # pacote utilizador para instalar pacotes de outros repositórios\n#pak::pkg_install('Icens')\n#pak::pkg_install('emdelponte/r4pde')\n```\n:::\n\n\nPrimeiramente, instala-se o pacote **pak** utilizando a função \"`install.packages()`\". Em seguida, com a função \"`pkg_install()`\", instala-se pacotes de outros repositórios, a exemplo, do GitHub.\n\n# Colagem de dados\n\nOutra ferramenta muito útil para lidar com colagem de dados diretamente no código, é instalando o pacote **datapasta**. Esse pacote oferece funcionalidades para colagem de dados de forma organizada junto ao código. Após a instalação, as funcionalidades do pacote ficam disponíveis no canto superior da janela com um botão *Addins*. Clicando nele, há diversas formas de colagem de dados. Mais informações [aqui](https://cran.r-project.org/web/packages/datapasta/vignettes/how-to-datapasta.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages('datapasta') # pacote instalado para colagem de dados copiados\n```\n:::\n\n\n## Importando banco de dados\n\n### Colando um vetor\n\nSelecione o conjunto de dados que se deseja colar, clique na opção *Addins*, na seção DATAPASTA clique em *paste as vactor*. Automaticamente, seus dados serão colados dentro da função concatenar (\"`c()`\"). Caso queira que a colagem dos dados seja na vertical, há a opção *paste as vector (vertical)*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncomp <- c(9, 125, 10, 8, 132, 11, 108, 95, 108, 104, 1372, 1591, 157, 142, 159, 1654, 18, 144, 1641, 16)\n```\n:::\n\n\n### Colando um dataframe\n\nPara data frames, a ideia é semelhante. Crie um objeto para receber os dados, selecione os dados que queira colar e na opção *Addins* clique no botão *paste as data.frame*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- data.frame(\n  stringsAsFactors = FALSE,\n                    trat = c(\"Mg2\",\"Mg2\",\"Mg2\",\n                             \"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\n                             \"control\",\"control\",\"control\",\"control\",\n                             \"control\",\"control\",\"control\",\"control\",\"control\",\n                             \"control\"),\n                     rep = c(1L,2L,3L,4L,5L,\n                             6L,7L,8L,9L,10L,1L,2L,3L,4L,5L,6L,7L,\n                             8L,9L,10L),\n                    comp = c(9,125,10,8,132,\n                             11,108,95,108,104,1372,1591,157,142,159,\n                             1654,18,144,1641,16)\n      )\n```\n:::\n\n\n### A tibble\n\nÉ como um data frame com algumas funcionalidades a mais. Por exemplo, elas não mudam automaticamente os dados das colulas de strings para fatores. Elas podem conter culunas mais complexas como colunas de listas. Uma impressão dos dados que não sobrecarrega o console. Para colagem desse tipo de dados, semelhante ao passo anterior, procure em *Addins* a opção referente a colagem de tibble.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- \n  tibble::tribble(\n      ~trat, ~rep, ~comp,\n      \"Mg2\",   1L,     9,\n      \"Mg2\",   2L,   125,\n      \"Mg2\",   3L,    10,\n      \"Mg2\",   4L,     8,\n      \"Mg2\",   5L,   132,\n      \"Mg2\",   6L,    11,\n      \"Mg2\",   7L,   108,\n      \"Mg2\",   8L,    95,\n      \"Mg2\",   9L,   108,\n      \"Mg2\",  10L,   104,\n  \"control\",   1L,  1372,\n  \"control\",   2L,  1591,\n  \"control\",   3L,   157,\n  \"control\",   4L,   142,\n  \"control\",   5L,   159,\n  \"control\",   6L,  1654,\n  \"control\",   7L,    18,\n  \"control\",   8L,   144,\n  \"control\",   9L,  1641,\n  \"control\",  10L,    16\n  )\n```\n:::\n\n\nColagem de dados de cotação de preço da saca de café de 60Kg do Centro de Comércio de Café de Vitória (CCCV). Os dados abaixo, foram selecionados de uma planilha de um site da web e colado junto ao código utilizando as funcionalidas já descritas do pacote **DATAPASTA**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvisitas <- tibble::tribble(\n                       ~`Dia`, ~`Arábica  Tipo 6`, ~`Arábica Tipo 7`, ~`Conilon Tipo 7/8`,\n                        \"1\",  \"965,00\",  \"860,00\",  \"813,00\",\n                        \"2\",       \"-\",       \"-\",       \"-\",\n                        \"3\",       \"-\",       \"-\",       \"-\",\n                        \"4\",  \"973,00\",  \"873,00\",  \"822,00\",\n                        \"5\",  \"964,00\",  \"859,00\",  \"820,00\",\n                        \"6\",  \"973,00\",  \"861,00\",  \"825,00\",\n                        \"7\",  \"992,00\",  \"878,00\",  \"850,00\",\n                        \"8\",  \"985,00\",  \"866,00\",  \"848,00\",\n                        \"9\",       \"-\",       \"-\",       \"-\",\n                       \"10\",       \"-\",       \"-\",       \"-\",\n                       \"11\",  \"967,00\",  \"859,00\",  \"836,00\",\n                       \"12\",  \"970,00\",  \"863,00\",  \"839,00\",\n                       \"13\",  \"962,00\",  \"864,00\",  \"839,00\",\n                       \"14\",  \"965,00\",  \"857,00\",  \"847,00\",\n                       \"15\",  \"965,00\",  \"856,00\",  \"849,00\",\n                       \"16\",       \"-\",       \"-\",       \"-\",\n                       \"17\",       \"-\",       \"-\",       \"-\",\n                       \"18\",  \"967,00\",  \"859,00\",  \"860,00\",\n                       \"19\",  \"968,00\",  \"860,00\",  \"861,00\",\n                       \"20\",  \"968,00\",  \"858,00\",  \"864,00\",\n                       \"21\",  \"975,00\",  \"864,00\",  \"870,00\",\n                       \"22\",  \"983,00\",  \"866,00\",  \"873,00\",\n                       \"23\",       \"-\",       \"-\",       \"-\",\n                       \"24\",       \"-\",       \"-\",       \"-\",\n                       \"25\",  \"984,00\",  \"872,00\",  \"876,00\",\n                       \"26\",  \"991,00\",  \"873,00\",  \"889,00\",\n                       \"27\",       \"-\",       \"-\",       \"-\",\n                       \"28\",       \"-\",       \"-\",       \"-\",\n                       \"29\",       \"-\",       \"-\",       \"-\",\n                       \"30\",       \"-\",       \"-\",       \"-\",\n                       \"31\",       \"-\",       \"-\",       \"-\",\n             \"Média Mensal\",  \"973,17\",  \"863,78\",  \"848,94\"\n             )\n```\n:::\n\n\nBanco de dados do pacote **r4pde**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper <- \n  tibble::tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  ) \n```\n:::\n\n\nTransformando o dataframe 'pepper' do formato largo para o formato longo utilizando a função `pivot_longer()` e criando um gráfico com **ggplot2** e criando anotações.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper |> \n  pivot_longer(2:4, names_to = 'epidemic', \n               values_to = 'inc') |> \n  ggplot(aes(t, inc, color = epidemic)) +\n  geom_point() + \n  geom_line(size = 1) + \n  annotate(geom = 'text',\n           x = 10,\n           y = 0.75,\n           label = '1') +\n  annotate(geom = 'text',\n         x = 25,\n         y = 0.75,\n         label = '2') +\n  annotate(geom = 'text',\n           x = 45,\n           y = 0.75,\n           label = '3') +\n  theme(legend.position = 'none') # elimina a legenda do gráfico\n```\n\n::: {.cell-output-display}\n![](Aula_4_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nObserve que cada uma das curvas está sendo identificada, além da cor, por um número. A inserção desses números foi feita utilizando a função `annotate()` do **ggplot2**. Como se pode obeservar no código, a função requer o preenchimento de alguns argumentos basícos, como posição do texto nos eixos x e y e o texto a ser inserido. Lembrando que no argumento \"label =\" a informação a ser apresentada no gráfico deve ser digitado entre áspas simples ou duplas (isso é um indicativo de caracter).\n\n# Tabela de contingência\n\nImportando banco de dados de ferrugem do cafeeiro em formato .csv da web:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n```\n:::\n\n\nUma maneira interessante para buscar rapidamente um sumário de ocorrência da ferrugem é por meio da função \"count()\". Nesse caso, a contagem foi indicada para ser feita dentro de cada uma das zonas de cada região. O valor n retornado indica o número de contagem da zona dentro do banco de dados, resumindo, o número de ocorrências de ferrugem.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  count(region, zone)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n  region zone             n\n  <chr>  <chr>        <int>\n1 Oromia Bale            30\n2 Oromia Ilu AbaBora     45\n3 Oromia Jimma           45\n4 Oromia West Wellega    45\n5 SNNPR  Bench Maji      45\n6 SNNPR  Gedio           45\n7 SNNPR  Keffa           45\n8 SNNPR  Sheka           45\n9 SNNPR  Sidama          60\n```\n\n\n:::\n:::\n\n\nA função `tabyl()` do pacote **janitor** é uma forma rápida de criar uma tabela de frequência. No exemplo a seguir, uma tabela de frequência em função da cultivar e região.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  tabyl(cultivar, region)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n cultivar Oromia SNNPR\n Improved     23    60\n    Local     50    66\n  Mixture     92   114\n```\n\n\n:::\n:::\n\n\nAbaixo, um gráfico de contagem com base no manejo adotado e cultivar utilizada. De maneira simplificada, 100% das áreas com cultivares melhoradas recebem um manejo intensivo. Grande parte da cultivar local não recebe nenhum tipo de manejo da doença. Para áreas onde há a misturas de cultivares, percebe-se que todas possuem pelo menos o manejo definido como mínimo para a ferrugem.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  count(farm_management, cultivar) |> \n  ggplot(aes(x = cultivar, y = n, fill = farm_management, label = n)) +\n  geom_col(position = 'dodge') + \n  scale_fill_calc() + \n  theme_bw() +\n  theme(strip.text.x = element_blank(), \n        legend.position = 'top') +\n  geom_text(position = position_dodge(width = 0.9)) +\n  facet_wrap(~cultivar, scales = 'free_x')\n```\n\n::: {.cell-output-display}\n![](Aula_4_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n# Criando anotações no gráfico\n\nComo já visto anteriormente, é possível inserir texto tipo caracter no gráfico gerado de acordo com o interesse do pesquisador. Nesse exemplo, utilizando outro banco de dados com dois tratamentos e uma variável resposta vamos plotar o valor médio +- o erro padrão. Além dissso, vamos inserir uma anotação \"\\*\" como indicativo que um dos tratamentos apresentou diferença significativa. Veja:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137 \")\n\nmg |> \n  group_by(trat) |> \n    summarise(mean_comp = mean(comp), \n              sd_comp = sd(comp)) |> \n    ggplot(aes(trat, mean_comp)) + \n    #geom_col(fill = 'red', width = 0.5) +\n    geom_point(size = 3) +\n    ylim(5, 20) +\n    geom_errorbar(aes(ymin = mean_comp - sd_comp, \n                      ymax = mean_comp + sd_comp), \n                  width = 0.05) +\n    annotate(geom = 'text',\n           x = 'control', y = 17.5,\n           label = \"*\"\n           )\n```\n\n::: {.cell-output-display}\n![](Aula_4_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Aula_4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}