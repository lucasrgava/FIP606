---
title: "Aula 6 e 7"
format: html
editor: visual
massage: false
warning: false
---

# Objetivo

Aprender a realizar Análise de Variância (ANOVA) e testar suas premissas, testes de comparações múltiplas, transformações de dados, testes não-paramétricos, Modelos Lineares Generalizados (GLMs) e Anova Fatorial.

# Pacotes

Pacotes requeridos no decorrer do código.

```{r message=FALSE, warning=FALSE}
library(tidyverse)    # Manipulação de dados
library(report)       # possui uma função interessante para retornar o um resumo do                         resultado estatístico
library(emmeans)
library(multcomp)
library(multcompView)
library(DHARMa)
library(performance)  # Testar as premissas
library(agricolae)
```

# Banco de dados: Dois grupos independentes

O banco de dados é constituído por dois tratamentos, controle e Mg e uma variável resposta '*comp'*.

```{r}
dados <- gsheet::gsheet2tbl(url = 'https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137')
```

## Gráfico

Visualizando os dados dos tratamentos por meio de Boxplot. Já é possível inferir que há diferença entre os tratamentos. Para ter certeza se essa diferença realmente existe, vamos seguir analisando.

```{r}
dados |> 
  ggplot(aes(trat, comp)) +
  geom_boxplot(fill = 'lightblue') + 
  labs(x = 'Treatments') +
  theme_classic() +
  labs(y = 'Comprimento')
```

## Teste t de Student

O teste t de Student é um teste de análise paramétrica e pode ser dividido em três tipos:

-   Teste t de **amostras independentes**: Quando se deseja comparar diferença entre médias de dois tratamentos;

-   Teste t de **amostras dependentes** ou pareadas: Quando se deseja comparar diferenças sobre um mesmo grupo antes e depois da aplicação do tratamento;

-   Teste t de **uma amostra**: Quando se deseja comparar a média do grupo com uma determinado valor conhecido.

Reestruturando banco de dados para o formato largo e realizando o teste t utilizando as funções `pivot_wider()` e `t.test()` dos pacotes **tidyr** e **stats**, respectivamente. Por fim, a função `report()`, do pacote **report,** retorna um resumo do resultado do teste. De maneira geral, o teste apresentou diferença significativa entre os dois tratamentos com p-valor \< 0,05.

```{r}
dados <- dados |> 
  pivot_wider(names_from = trat, values_from = comp)

teste <- t.test(dados$Mg2, dados$control)
report(teste)
```

## Premissas

Antes de prosseguir com análise paramétrica dos dados, é necessário que os dados atendam as premissas de **Normalidade dos Dados** e **Homogeneidade de Variâncias**.

### Normalidade

O teste de normalidade adotado aqui é o teste de **Shapiro-Wilk**. Existem outros testes de normalidade que podem ser utilizados. No entanto, esse teste é considerado o mais poderoso entre os testes. Pode ser feito da seguinte maneira:

```{r}
shapiro.test(dados$Mg2)
```

```{r}
shapiro.test(dados$control)
```

Observe que a normalidade foi testada para cada tratamento e o p-valor \> 0,05. Dessa maneira, não se rejeita a hipótese nula (H0), que os dados são normais.

#### Gráfico de normalidade

O código abaixo, apresenta graficamente a normalidade dos dados. Nesse caso, testamos a normalidade para o vetor de valores do tratamento Mg. A interpretação do gráfico é que quanto mais próximo os pontos estão da reta, ou, quanto menor esse erro dos pontos em relação a reta, mais próximo da normalidade estão os dados.

```{r}
qqnorm(dados$Mg2)
qqline(dados$Mg2)
```

### Homogeneidade de variâncias

A função `var.test()` do pacote **stats** pode ser utilizada para análise de variâncias. A função pede como argumento basicamente 2 vetores numéricos, cada um com os valores da variável resposta de cada um dos tratamentos.

```{r}
var.test(dados$Mg2, dados$control)
```

Caso as variâncias não sejam homogêneas, pode-se acrescentar o argumento:

```{r}
t.test(dados$Mg2, dados$control, var.equal = FALSE)
```

Acabamos de verificar as premissas de normalidade dos dados e homogeneidade das variâncias.

# Banco de dados: Dois grupos com dependência

Os dados que trabalharemos agora são referentes a avaliações de intensidade de doença sem e com auxílio de escala diagramática. Nesse caso, os dados são coletados sobre o mesmo avaliador em momentos diferentes. No primeiro momento, o avaliador não faz uso de escala. No segundo momento, o avaliador faz uso de escala. O objetivo aqui é analisar se há ganho em acurácia e precisão quando se adota a escala comparado a quando não há. Nesse sentido, dizemos que existe dependência entre os dados e seguimos com teste t pareado.

```{r}
dados2 <- gsheet::gsheet2tbl('https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1729131173')
```

## Gráfico

```{r}
dados2 |> 
  ggplot(aes(assessment, acuracia)) +
  geom_boxplot(fill = 'lightblue') + 
  labs(y = "Acurácia",
       x = 'Avaliação') +
  theme_classic() +
  theme(text = element_text(size = 15)) 
  
```

## Teste t pareado

Seguindo o mesmo raciocínio utilizado no banco de dados anterior, para este, também será ajustado para o formato largo antes de seguir com a análise.

Para realizar o teste entre grupos pareados (dependentes), basta acrescentar o argumento `paired = TRUE` dentro da função `t.test()`.

```{r}
dados2 <- dados2 |> 
  dplyr::select(rater, assessment, acuracia)

dados2 <-  dados2 |> 
  pivot_wider(names_from = assessment, values_from = acuracia)


t.test(dados2$Unaided, dados2$Aided1, paired = TRUE)
```

O p-valor \< 0,05, rejeita-se H0 e aceita-se a hipótese alternativa (Ha), ou seja, existe diferença significativa entre os grupos de médias ao nível de 5% de probabilidade, pelo teste t pareado. Agora, é preciso verificar as premissas antes de aceitar este resultado como verdade.

## Premissas

### Normalidade

```{r}
shapiro.test(dados2$Unaided)
shapiro.test(dados2$Aided1)
```

Pelo menos um dos grupos não apresentou normalidade dos dados.

### Homogeneidade de variâncias

```{r}
var.test(dados2$Unaided, dados2$Aided1)
```

As variâncias não podem ser consideradas homogêneas. P-valor \> 0,05. Os dados foram submetidos a transformações e mesmo assim não atenderam as premissas. Nesse caso, para prosseguir com a análise dos dados é preciso partir para análise não paramétrica, que será abordada mais adiante.

No entanto, supondo que os dados são normais e apenas a premissa de homogeneidade de variâncias não foi atendida, pode-se seguir com a análise do teste t indicando o argumento *`var.equal = FALSE`* dentro da função `t.test()`. Esse teste é uma variação do teste t e é conhecido com teste t de Welch.

```{r}
t.test(dados2$Unaided, dados2$Aided1, paired = TRUE, var.equal = FALSE)
```

# Teste não-paramétrico

Seguindo com a análise do conjunto de dados anterior, adotar teste não-paramétrico é uma alternativa para seguir com as análises quando as premissas dos testes paramétricos não são atendidas.

## Wilcoxon Signed-Rank

Esse teste é uma alternativa não-paramétrica para análise de dados pareados que não apresentam normalidade. Utilizando a função `wilcox.test()` e definindo o argumento *`paired = TRUE`"*.

```{r}
wilcox.test(dados2$Aided1,
            dados2$Unaided,
            paired = TRUE)
```

O p-valor \< 0,05, indicando que existe diferença entre os tratamentos pelo referido teste.

# Banco de dados: Três ou mais grupos

Agora vamos seguir para analisar dados cujas comparações são entre três ou mais grupos. Os dados importados abaixo são referentes a um ensaio conduzido num Delineamento experimental Inteiramente Casualizado (DIC), com 5 tratamentos (espécies) e 6 repetições com apenas uma variável resposta.

```{r}
dados3 <- gsheet::gsheet2tbl('https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827')
```

## Gráfico

```{r}
dados3 |> 
  ggplot(aes(especie, tcm)) +
  geom_boxplot(fill = 'grey') +
  geom_jitter(width = 0.1, size = 2.5, alpha = 0.7, color = 'darkred') +
  labs(x = 'Espécies') +
  theme_classic()
```

## ANOVA

A ANOVA (Análise de Variância), identifica a existência de pelo menos uma média com diferença significativa entre as demais. No entanto, ela por si só, não indica quais médias são diferentes entre si. A hipótese testada é que as médias são iguais. O quadro de ANOVA retorna o p-valor e este sendo menor que o nível de significancia adotado pelo pesquisador, rejeita-se a H0 e aceita-se a Ha. Para realizar essa análise no R, pode-se seguir com as funções `anova()` e `lm()` do pacote **stats**. Para entender melhor sobre como utilizar essas funções e seus argumentos, busque ajuda digitando no console *`?NOME DA FUNÇÃO`*.

```{r}
anova(lm(tcm ~ especie, data = dados3))
```

O resultado do Quadro da ANOVA indicou que existe pelo menos uma média, entre os tratamentos, que se diferem entre si ao nível de 5% de significância.

## Teste de comparações múltiplas

Utilizando a função `emmeans()` e `cld()` para separar os grupos de médias estatisticamente diferentes entre si.

```{r}
m1 <- lm(tcm ~ especie, data = dados3)
medias1 <-  emmeans(m1, ~ especie)
cld(medias1, Letters = letters)
```

## Premissas: normalidades dos resíduos

A seguir, três maneiras de verificar as premissas.

-   **Primeira maneira**: Utilizando as funções `shapiro.test()` e `bartlett.test()`.

Os resíduos são normais e as variâncias são homeogêneas.

```{r}
shapiro.test(m1$residuals)
bartlett.test(tcm ~ especie, data = dados3)
```

-   **Segunda maneira:** Realizando o plot do resultado da função `simulateResiduals()` do modelo ajustado, nesse caso, 'm1'. Os resíduos são normais e as variências homogêneas.

```{r}
plot(simulateResiduals(m1))
```

-   **Terceira maneira:** Utilizando aa fuções `check_normality()` e `check_heteroscedasticity()` do pacote **Performance**, para verificar a normalidade dos resíduos e homeogeneidade das variâncias, respectivamente.

```{r}
check_normality(m1)
check_heteroscedasticity(m1)
plot <- check_model(m1)
```

# Banco de dados

O banco de dados contêm 6 tratamentos com 12 repetições cada.

```{r}
insects <- InsectSprays
insects |> count(spray)
```

## Gráfico

Apenas com base no gráfico abaixo, podemos inferir que existe tratamentos que diferem entre si sobre a variável contagem. Vamos realizar os teste estatísticos para ter certeza disso.

```{r}
insects |> 
  ggplot(aes(x = spray, y = count)) +
  geom_boxplot(outlier.colour = NA, fill = 'lightblue') +
  geom_jitter(width = 0.05, color = 'gray') + 
  labs(x = 'Spray', y = 'Contagem') +  
  theme_classic()
```

## ANOVA

Esses dados são referentes a um ensaio realizado em Delineamento Inteiramente Casualizado (DIC). Logo, o ajuste do modelo, para rodar a ANOVA, é simples. Como apresentado no código abaixo:

```{r}
ml <- lm(count ~ spray, 
         data = insects)
anova(ml)
```

O p-valor \< 0,05, ou seja, existe pelo menos um par de médias que se diferem entre si, pelo teste F, ao nível de 5% de probabilidade.

## Gráfico: Histograma dos resíduos

Com base no gráfico abaixo, é perceptível que os resíduos têm uma distribuição normal. Seguimos agora com um teste de normalidade para confirmar essa ideia.

```{r}
insects |> 
  ggplot(aes(x = ml$residuals)) +
  geom_histogram(bins = 10, color = 'white', fill = 'lightblue') + 
  labs(x = 'Resíduos') +
  theme_classic()
```

```{r}
shapiro.test(ml$residuals)
```

O teste indica não normalidade dos dados, apesar de visualmente o histograma apresentar uma certa normalidade. Vale lembrar que a homogeneidade das variâncias é mais importanque que a normalidade dos resíduos.

```{r}
bartlett.test(count ~ spray, 
              data = insects)
```

De acordo com o teste de Bartlett os dados possuem variâncias heterogêneas. Resumindo, não é possível aplicar estatística paramétrica. Parte-se agora para transformação de dados para verificar se é possível trabalhar com estatística paramétrica com esses dados.

Quando os dados são de contagem, normalmente a transformação com base na raiz quadrada é interessante.

## Alternativa 1: transformação

### Transformação por raiz quadrada

```{r}
insects <- insects |> 
  mutate(count2 = sqrt(count))

insects |> 
  ggplot(aes(x = spray, y = count2)) +
  geom_boxplot(fill = 'lightblue') +
  theme_classic() +
  labs(y = 'Count \n (transformação pela raiz quadrada)', x = 'Spray')
```

Seguimos agora para testar as premissas utilizando os dados transformados.

```{r}
ml <- lm(count2 ~ spray,
         data = insects)
anova(ml)
# Uma maneira de testear as premissas
shapiro.test(ml$residuals)
bartlett.test(count2 ~ spray,
              data = insects)

# Outra maneira de testar as premissas
check_normality(ml)
check_heteroscedasticity(ml)

```

Premissas atendidas com a transformação por raiz quadrada. Partimos para testes de comparações múltiplas:

```{r}
medias1 <-  emmeans(ml, ~ spray)
cld(medias1, Letters = letters)
```

Concluimos que os fungicidas C e E são os mais eficazes.

### Transformação Box-Cox

Outra maneira de transformar os dados é por meio da transformação de Box-Cox. Para isso, primeiro é preciso encontrar o lambda.

```{r}
library(MASS)

b <-  boxcox(lm(insects$count + 0.1 ~ 1))
lambda <- b$x[which.max(b$y)]
lambda
```

Criando a variável transformada conforme a equação:

-   y(lambda) = (x\^lambda - 1) / lambda.

```{r}
insects$count3 <- (insects$count ^ lambda - 1) / lambda

```

## Alternativa 2: Teste não paramétrico

Caso, após as transformações, os dados ainda não atendam as premissas de normalidade e homogeneidade de variâncias, podemos seguir com análise não-paramétrica. Testes não-paramétricos não consideram as premissas antes testadas e permitem que prossigamos com a análise dos dados.

O teste de [Kruskal-Wallis](https://rcompanion.org/handbook/F_08.html) é um teste não paramétrico similar ao teste F. Portanto, o teste não separa os grupos. Para isso, após o teste apresentar que há pelo menos um par de tratamentos que se diferem estatisticamente entre si, é necessário adotar um teste Post Hoc, para comparações múltiplas. A função `kruskal.test()`, do pacote **stats**, realiza essa primeira parte. A função `kruskal()` do pacote **agricolae,** realiza essas duas etapas de uma vez. Caso queira, pode-se realizar testes Post Hoc como o teste de Dunn, teste de Nemenyi ou teste de Conover.

```{r}
kruskal.test(count ~ spray, data = insects)
```

```{r}
m3 <- kruskal(insects$count, insects$spray, group = T)
m3$groups
```

## Alternativa 3: Modelo linear generalizado (GLMs)

Outra alternativa que se pode adotar, para análisar dados que não atenderam as premissas, é realizar ajustes de modelos não lineares, que permite indicar a qual distribuição os dados pertencem. A função `glm()` do pacote **stats**, ajusta esses modelos.

```{r}
m4 <- glm(count ~ spray, 
          family = poisson, # poisson por ser dados de contagem
          data = insects)
summary(m4)

library(car)
Anova(m4)

```

P-valor \< 0,05, um indicativo que existe pelo menos uma média com diferença significativa. Agora para separar os grupos seguimos com testes de comparações múltiplas.

```{r}
medias4 <-  emmeans(m4, ~ spray,
                    type = "response")
cld(medias4, Letters = letters)

```

# Anova Fatorial

Partimos agora para análise de dados organizados em esquema fatorial.

## Banco de dados

Dados referentes a um ensaio realizado em Delineamento Inteiramente Casualizado (DIC) em esquema fatorial 2x2. O primeiro fator, qualitativo, composto pelos níveis: Líquido iônico e Tebuconazol. O segundo fator, quantitativo, composto pelos níveis: 0,5 e 2. Avaliou-se o efeito dos tratamentos sobre a intensidade de uma doença qualquer.

```{r}
dados <- gsheet::gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=2023059672")
```

## Gráfico

Visualmente, é perceptível uma diferença do tratamento líquido iônico na concentração de 0,2 com os outros tratamentos.

```{r}
dados |> 
  ggplot(aes(factor(dose), x = treat, y = severity, color = factor(dose))) + 
  geom_jitter(size = 3, width = 0.2) +
  theme_classic() + 
  labs(y = 'Severidade (%)', x = ' ', color = 'Doses') +
  theme(text = element_text(size = 15))
```

# ANOVA e teste de comparações múltiplas

Vamos rodar os testes para verificar se realmente existe essa diferença detectada visualmente no gráfico. Nesse caso, ajustamos o modelo como se segue:

```{r}
mf <- lm(severity ~ treat*factor(dose), data = dados )
anova(mf)
plot(simulateResiduals(mf))
mf_medias1 <- cld(emmeans(mf, ~ treat | dose))
mf_medias2 <- cld(emmeans(mf, ~ dose | treat))

mf_medias1; mf_medias2
```

Como visualizado no gráfico de dispersão, existe diferença entre os níveis de dose dentro do fator líquido iônico e diferença entre os níveis qualitativos dentro do nível 0,5 do fator dose. Concluindo que a aplicação do líquido iônico é equivalente a aplicação de fungicida tebuconazol quando aplicado na dose 2, sobre a redução da severidade da doença.
